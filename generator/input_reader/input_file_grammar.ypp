%{
    #include "grammar_info.h"
%}

%union {
    string *string_ptr_val;
    char char_val;
}

%token <string_ptr_val> WORD
%token <string_ptr_val> CPP_CODE

%token <char_val> CHAR_TOKEN
%token <string_ptr_val> TOKEN

%token LEFT
%token RIGHT

%token SEPARATOR // %%

%%
    input: CPP_CODE tokens operators rules
    ;
    tokens: SEPARATOR token_seq SEPARATOR
    ;
    token_seq:
      // empty
      | token token_seq
    ;
    token:
        '<' WORD '>' WORD {
            // TODO
        }
    ;
    operators: SEPARATOR operator_seq SEPARATOR;
    operator_seq:
      // empty
      | operator operator_seq
    ;
    operator:
        LEFT WORD
      | RIGHT WORD
    ;
    rules: SEPARATOR rules_seq SEPARATOR;
    rules_seq:
        // empty
      | rule rules_seq
    ;
    rule: WORD ':' rules_tail_seq;
    rules_tail_seq:
        // empty
      | rules_tail rules_tail_seq
    ;
    rules_tail: 
        // empty
      | single_tail '|' rules_tail
    ;
    single_tail:
        symbols
      | symbols CPP_CODE
    ;
    symbols:
        // empty
      | TOKEN symbols
      | CHAR_TOKEN symbols
    ;
%%
